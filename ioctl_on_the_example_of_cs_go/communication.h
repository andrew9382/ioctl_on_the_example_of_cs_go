#pragma once

#define IO_GET_CLIENT_DLL_ADDRESS	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x666, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

#define IO_READ_MEMORY_REQUEST		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x667, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

#define IO_WRITE_MEMORY_REQUEST		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x668, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

#define IO_GET_CS_PROCESS_ID		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x669, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

NTSTATUS IoControl(DEVICE_OBJECT* p_device_object, IRP* p_irp);

NTSTATUS CloseCall(DEVICE_OBJECT* p_device_object, IRP* p_irp);

NTSTATUS CreateCall(DEVICE_OBJECT* p_device_object, IRP* p_irp);

typedef struct _KERNEL_READ_VIRTUAL_MEMORY
{
	ULONG address;
	ULONG process_id;
	ULONG p_buffer;
	ULONG size;

}KERNEL_READ_VIRTUAL_MEMORY, * PKERNEL_READ_VIRTUAL_MEMORY;

typedef struct _KERNEL_WRITE_VIRTUAL_MEMORY
{
	ULONG address;
	ULONG process_id;
	ULONG p_buffer;
	ULONG size;

} KERNEL_WRITE_VIRTUAL_MEMORY, *PKERNEL_WRITE_VIRTUAL_MEMORY;